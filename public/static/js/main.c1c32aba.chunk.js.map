{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","router/PublicRoute.jsx","router/PrivateRoute.jsx","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.jsx","components/auth/RegisterScreen.jsx","helpers/calendar-messages-es.js","components/ui/Navbar.jsx","components/calendar/CalendarEvent.jsx","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","router/AppRouter.jsx","CalendarApp.jsx","reportWebVitals.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","event","end","moment","toDate","start","addEventAction","clearActiveEventAction","updateEventAction","deleteEventAction","loadEventAction","login","user","checkingFinish","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","email","password","formValues","className","onSubmit","preventDefault","a","response","json","ok","setItem","Date","getTime","uid","Swal","fire","icon","title","text","message","startLogin","placeholder","onChange","RegisterScreen","password1","password2","startRegister","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","Navbar","useSelector","onClick","CalendarEvent","uiOpenModalAction","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOneHour","clone","initEvent","notes","CalendarModal","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","trim","length","console","log","getState","_id","addNewEventAction","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","AppRouter","exact","path","CalendarApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1c32aba.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Clean active event',\r\n    eventStartAddNew: '[event] Start add new event',\r\n    eventAdded: '[event] Event added',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAdded: {\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id ? action.payload : e)\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout: {\r\n            return {\r\n                ...initialState\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authStartRegister:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? (<Redirect to=\"/\" />)\r\n                    : (<Component {...props} />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        (event) => ({\r\n            ...event,\r\n            end: moment(event.end).toDate(),\r\n            start: moment(event.start).toDate()\r\n        })\r\n    )\r\n}","import Swal from 'sweetalert2';\r\nimport { fetchWithToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\nexport const addNewEventAction = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const response = await fetchWithToken('events', event, 'POST');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                dispatch(addEventAction(event));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst addEventAction = (event) => ({\r\n    type: types.eventAdded,\r\n    payload: event\r\n});\r\n\r\nexport const setActiveEventAction = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const clearActiveEventAction = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const startUpdateEventAction = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            const response = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(updateEventAction(event));\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: body.message,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst updateEventAction = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDeleteAction = () => {\r\n    return async (dispatch, getState) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n\r\n            const response = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(deleteEventAction());\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: body.message,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst deleteEventAction = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoadingAction = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const response = await fetchWithToken('events');\r\n            const body = await response.json();\r\n            const events = prepareEvents(body.events);\r\n\r\n            dispatch(loadEventAction(events))\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst loadEventAction = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const cleanActiveEventLogout = () => ({ type: types.eventLogout });","import Swal from 'sweetalert2';\r\nimport { types } from '../types/types';\r\nimport { fetchWithoutToken, fetchWithToken } from '../helpers/fetch';\r\nimport { cleanActiveEventLogout } from './events';\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const response = await fetchWithoutToken('auth', { email, password }, 'POST');\r\n        const body = await response.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error de autenticación',\r\n                text: body.message,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async (dispatch) => {\r\n        const response = await fetchWithoutToken('auth/register', { name, email, password }, 'POST');\r\n        const body = await response.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error de autenticación',\r\n                text: body.message,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const response = await fetchWithToken('auth/renew');\r\n        const body = await response.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(cleanActiveEventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n\r\n","import { useState } from \"react\";\r\n\r\n/**\r\n * Receives an object that must have the properties,\r\n * each of these properties will be a form field\r\n * @param {object} initialState Initial state\r\n * @returns {array} The first value is the state of the form, the second is a function to change the form values, and the third is a function to reset the form\r\n */\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import React from 'react'\r\nimport './auth.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(email, password));\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"col-md-6 col-lg-3\">\r\n                <div className=\"card card-login\">\r\n                    <div className=\"card-header bg-white\">\r\n                        <h3 className=\"text-center mb-0\">Iniciar sesión</h3>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleLogin}>\r\n                            <div className=\"input-group mb-2\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-envelope\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"nombre@gmail.com\"\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group mb-2\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-lock\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña\"\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary btn-block mt-3\"\r\n                                >\r\n                                    Iniciar sesión\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                        <div>\r\n                            <span className=\"mr-2\">¿No tienes cuenta?</span>\r\n                            <Link to=\"/register\">Crear cuenta</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password1: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password1, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password1 !== password2) {\r\n            return Swal.fire({\r\n                icon: 'info',\r\n                title: 'Advertencia',\r\n                text: 'Las contraseñas deben de ser iguales',\r\n            });\r\n        }\r\n\r\n        dispatch(startRegister(name, email, password1))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <div className=\"col-md-6 col-lg-3\">\r\n\r\n                <div className=\"card card-register mb-3\">\r\n                    <div className=\"card-header bg-white\">\r\n                        <h3 className=\"text-center mb-0\">Crea tu cuenta</h3>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleRegister}>\r\n                            <div className=\"input-group mb-2\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-user\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Nombre\"\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group mb-2\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-envelope\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"nombre@gmail.com\"\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group mb-2\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-lock\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    name=\"password1\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña\"\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group mb-2\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-lock\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    name=\"password2\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Repita la contraseña\"\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary btn-block mt-3\"\r\n                                >\r\n                                    Crear cuenta\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                        <div>\r\n                            <span className=\"mr-2\">¿Ya tienes cuenta?</span>\r\n                            <Link to=\"/login\">Iniciar sesión</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-light bg-light mb-4\">\r\n            <span className=\"navbar-brand\">{name}</span>\r\n            <button\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-power-off\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <span> - {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModalAction = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModalAction = () => ({\r\n    type: types.uiCloseModal\r\n});","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModalAction } from '../../actions/ui';\r\nimport {\r\n    addNewEventAction,\r\n    clearActiveEventAction,\r\n    startUpdateEventAction\r\n} from '../../actions/events';\r\nimport { useEffect } from 'react';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\n// Fix error in tests [react-modal: No elements were found for selector #root]\r\nif (process.env.NODE_ENV !== 'test') {\r\n    Modal.setAppElement('#root');\r\n}\r\n\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlusOneHour = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlusOneHour.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent)\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModalAction());\r\n        dispatch(clearActiveEventAction())\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        // TODO The end time must be greater than the start time.\r\n\r\n        if (title.trim().length === 0) {\r\n            return Swal.fire({\r\n                icon: 'info',\r\n                title: 'Advertencia',\r\n                text: 'El título del evento es obligatorio',\r\n            })\r\n        }\r\n\r\n        // Save to database\r\n        if (activeEvent) {\r\n            dispatch(startUpdateEventAction(formValues));\r\n        } else {\r\n            dispatch(addNewEventAction(formValues));\r\n        }\r\n\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={300}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-background\"\r\n        >\r\n            <h2> {(activeEvent) ? 'Editar evento' : 'Nuevo evento'} </h2>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmitForm}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={start}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={end}\r\n                        minDate={start}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Título del evento\"\r\n                        autoComplete=\"off\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        Descripción corta\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModalAction } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNewEvent = () => {\r\n        dispatch(uiOpenModalAction());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNewEvent}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Swal from 'sweetalert2';\r\nimport { eventStartDeleteAction } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        Swal.fire({\r\n            title: '¿Está seguro?',\r\n            text: \"No podrá revertir esto!!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, elimimar',\r\n            cancelButtonText: 'Cancelar'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                dispatch(eventStartDeleteAction());\r\n                Swal.fire(\r\n                    'Eliminado!!',\r\n                    'Tu evento ha sido borrado',\r\n                    'success'\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nimport { uiOpenModalAction } from '../../actions/ui';\r\nimport { clearActiveEventAction, eventStartLoadingAction, setActiveEventAction } from '../../actions/events';\r\nimport { useEffect } from 'react';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastview') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoadingAction());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClickEvent = (e) => {\r\n        dispatch(uiOpenModalAction());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(setActiveEventAction(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastview', e);\r\n    }\r\n\r\n    const onSelectedSlot = (e) => {\r\n        dispatch(clearActiveEventAction())\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367cf7' : '#455a64',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: '#ffffff'\r\n        }\r\n\r\n        return { style };\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column vh-100 calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClickEvent}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectedSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {(activeEvent) && <DeleteEventFab />}\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return (\r\n            <div className=\"text-center spinner\">\r\n                <i className=\"fas fa-spinner fa-spin fa-5x\"></i>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid} // Convert string to a boolean value\r\n                    />\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/register\"\r\n                        component={RegisterScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { CalendarApp } from './CalendarApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}